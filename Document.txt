说明：
K()表示用密钥K加密括号内的内容
消息均为二进制的序列化Message对象
KpubV表示V的公钥，KpriV表示V的私钥
KAB表示AB之间的对称秘钥，A持有
KAB = KBA

0 客户端存有服务器的公钥KpubS

1 注册过程
	1.1 用户C输入唯一的IDENTITY
	1.2 客户端本地生成一对密钥KpubC 与KpriC
	1.3 客户端向服务器发送消息KpubS(REGISTER+ID+KpubC+KpriC(TIME))
	1.4 服务器校验
		1.4.1 时间正确
		1.4.2 当前数据库中不存在此ID
	1.5 校验成功
		1.5.1 将邮箱和对应的KpubC存入数据库
		1.5.2 向客户端发送消息KpubC(SUCCESS+KpriS(TIME))
	1.6 校验失败
		1.6.1 向客户端发送消息KpubC(FAILED+KpriS(TIME))
	1.7 客户端收到消息，检验消息类型和时间戳
		1.7.1 SUCCESS，将密钥对存储在本地，告知用户注册成功
		1.7.2 Failed，告知用户注册失败

2 登录过程
	2.1 用户C输入ID和对应的私钥kpriC
	2.2 客户端向服务器发送消息KpubS(LOGIN+ID+KpriC(TIME))
	2.3 服务器查询数据库校验ID和时间戳
	2.4 校验成功
		2.4.1 生成一对对称秘钥KSC和KCS
		2.4.2 向客户端发送消息KpubC(SUCCESS+KCS+KpriS(TIME))
		2.4.3 服务器记录C在线并维持与客户端socket连接
	2.5 校验失败
		2.5.1 向客户端发送消息KpubC(FAILED+KpriS(TIME))
	2.6 客户端收到服务器发来消息，检验消息类型和时间戳
		2.6.1 SUCCESS，内存缓存KCS，告知用户登录成功，客户端维持与服务器连接
		2.6.2 FAILED，告知用户登录失败

3 加好友（A要加B为好友）
	3.1 用户A输入用户B的ID
	3.2 客户端向服务器发送消息KAS(FRIENDING+IDA+IDB+KAS(TIME))
	3.3 服务器查询数据库
	3.4 不存在IDB或不在线
		3.4.1 向A发送消息KSA(FAILED+KSA(TIME))
		3.4.2 A收到消息
	3.5 存在IDB且在线
		3.5.1 向B发送消息KSB(FRIENDING+IDA+IDB+KSB(TIME))
		3.5.2 B收到消息，做出反应
		3.5.3 B同意了
			3.5.3.1 B在客户端显示
			3.5.3.2 B向服务器发送KBS(YES+IDA+IDB+KBS(TIME))
		3.5.4 B不同意
			3.5.4.1 B向服务器发送KBS(NO+IDA+IDB+KBS(TIME))
		3.5.5 服务器收到B的消息，验证B是否同意
		3.5.6 同意了
			3.5.6.1 服务器在数据库记录好友关系
			3.5.6.2 服务器告知A同意了，并把B的公钥发给A
		3.5.7 没同意，告知A

4 用户协商对称密钥KAB,KBA
	4.1 由A生成一个对称密钥（AES）为KAB,KBA
	4.2 A向服务器发送KAS(FORWARD+IDA+IDB+KpubB(SESSION_KEY+KBA+KpriA(TIME)))
	4.3 服务器接收到后，判断AB之间是否是好友，如果不是，告知A，如果是，转发KSB(FORWARD+IDA+IDB+KpubB(SESSION_KEY+KBA+KpriA(TIME)))给B
	4.4 B接受到消息后解密
	4.5 解密成功
		4.5.1 储存KBA
		4.5.2向服务器发送消息KBS(FORWARD+IDB+IDA+KpubA(SUCCESS+KpriB(TIME)))
	4.6 解密失败
		4.6.1 向服务器发送消息KBS(FORWARD+IDB+IDA+KpubA(FAILED+KpriB(TIME)))
	4.7 服务器将消息转发给A
	4.8 A判断消息内容
	4.9 SUCCESS，储存KAB，接下来与B通信都是用KAB
	4.10 FAILED，告知用户失败

5 用户聊天
	5.1 需要发送的文本信息为T
	5.2 AB之间已经共享对称秘钥KAB，KBA
	5.3 所有消息格式都是KAS(FORWARD+IDA+IDB+KAB(CHAT+T+KAS(TIME)))

6 获得好友列表
	6.1 C向服务器发送消息KCS(FRIEND_LIST+IDC+KCS(TIME))
	6.2 服务器返回消息KSC(FRIEND_LIST+friend_id_list+KSC(TIME))

7 查询用户公钥
	7.1 C向服务器发送消息KCS(QUERY+IDC+IDQ+KCS(TIME))
	7.2 服务器返回消息KSC(QUERY+KpubQ+KSC(TIME))
	
